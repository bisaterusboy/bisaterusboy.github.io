/* ===== DARK MODE TOGGLE STYLES ===== */
/* This file uses CSS variables defined in index.css */

.toggle-container {
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.toggle {
  visibility: hidden;
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle + label {
  display: flex;
  align-items: center;
  font-size: 1.25rem;
  cursor: pointer;
  color: var(--text-primary);
  transition: var(--transition);
  padding: 0.5rem;
  border-radius: var(--border-radius);
  user-select: none;
}

.toggle + label:hover {
  background-color: var(--bg-secondary);
  transform: scale(1.05);
}

.toggle + label::before {
  content: "";
  height: 1.5em;
  width: 3em;
  border-radius: 1.5em;
  background-color: var(--border-color);
  margin-right: 0.75em;
  transition: var(--transition);
  position: relative;
  border: 2px solid var(--border-color);
}

.toggle + label::after {
  content: "";
  height: 1.1em;
  width: 1.1em;
  border-radius: 50%;
  background-color: var(--text-light);
  position: absolute;
  left: 0.3em;
  top: 50%;
  transform: translateY(-50%);
  transition: var(--transition);
  box-shadow: 0 2px 4px var(--shadow-color);
}

/* Toggle checked state */
.toggle:checked + label::before {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.toggle:checked + label::after {
  transform: translateY(-50%) translateX(1.4em);
  background-color: var(--text-light);
}

/* Toggle focus states for accessibility */
.toggle:focus + label {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
  border-radius: var(--border-radius);
}

.toggle:focus:not(:focus-visible) + label {
  outline: none;
}

/* Icon styles for toggle */
.toggle-icon {
  font-size: 1.25rem;
  transition: var(--transition);
  color: var(--text-secondary);
}

.toggle + label:hover .toggle-icon {
  color: var(--primary-color);
  transform: scale(1.1);
}

/* Dark mode specific styles */
[data-theme="dark"] .toggle + label::before {
  background-color: white;
  border-color: var(--border-color);
}

[data-theme="dark"] .toggle:checked + label::before {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

[data-theme="dark"] .toggle + label::after {
  background-color: var(--text-light);
}

/* Responsive design */
@media (max-width: 768px) {
  .toggle-container {
    gap: 0.25rem;
  }
  
  .toggle + label {
    font-size: 1rem;
    padding: 0.25rem;
  }
  
  .toggle + label::before {
    height: 1.25em;
    width: 2.5em;
    margin-right: 0.5em;
  }
  
  .toggle + label::after {
    height: 0.9em;
    width: 0.9em;
    left: 0.25em;
  }
  
  .toggle:checked + label::after {
    transform: translateY(-50%) translateX(1.15em);
  }
  
  .toggle-icon {
    font-size: 1rem;
  }
}

@media (max-width: 576px) {
  .toggle + label {
    font-size: 0.875rem;
  }
  
  .toggle + label::before {
    height: 1.1em;
    width: 2.2em;
    margin-right: 0.4em;
  }
  
  .toggle + label::after {
    height: 0.8em;
    width: 0.8em;
    left: 0.2em;
  }
  
  .toggle:checked + label::after {
    transform: translateY(-50%) translateX(1em);
  }
  
  .toggle-icon {
    font-size: 0.875rem;
  }
}

/* Animation for toggle state change */
@keyframes toggleOn {
  0% {
    transform: translateY(-50%) scale(0.8);
  }
  50% {
    transform: translateY(-50%) scale(1.1);
  }
  100% {
    transform: translateY(-50%) scale(1);
  }
}

@keyframes toggleOff {
  0% {
    transform: translateY(-50%) scale(1);
  }
  50% {
    transform: translateY(-50%) scale(1.1);
  }
  100% {
    transform: translateY(-50%) scale(1);
  }
}

.toggle:checked + label::after {
  animation: toggleOn 0.3s ease-out;
}

.toggle:not(:checked) + label::after {
  animation: toggleOff 0.3s ease-out;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .toggle + label::before {
    border-width: 3px;
  }
  
  .toggle + label::after {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .toggle + label,
  .toggle + label::before,
  .toggle + label::after,
  .toggle-icon {
    transition: none;
  }
  
  .toggle:checked + label::after,
  .toggle:not(:checked) + label::after {
    animation: none;
  }
}
